plugins {
    id "application"
    id "com.google.osdetector" version "1.6.0"
    id "jacoco"
}

mainClassName = "com.judge40.gridgenerator.GridGeneratorLauncher"
sourceCompatibility = JavaVersion.VERSION_11

ext.platform = osdetector.os == "osx" ? "mac"
        : osdetector.os == "windows" ? "win"
        : osdetector.os

check {
    dependsOn jacocoTestReport
}

compileJava {
    doFirst {
        options.compilerArgs = [
                "--module-path", classpath.asPath,
                "--add-modules", "javafx.controls"
        ]
    }
}

compileTestJava {
    options.encoding = "UTF-8"
}

dependencies {
    // JavaFX dependencies.
    implementation "org.openjfx:javafx-base:11:$platform"
    implementation "org.openjfx:javafx-controls:11:$platform"
    implementation "org.openjfx:javafx-fxml:11:$platform"
    implementation "org.openjfx:javafx-graphics:11:$platform"

    // JMockit dependency.
    testImplementation "org.jmockit:jmockit:1.46"

    // JUnit dependencies.
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.3.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"

    // TestFX dependencies.
    testImplementation "org.testfx:openjfx-monocle:jdk-11+26"
    testImplementation "org.testfx:testfx-core:4.0.15-alpha"
    testImplementation "org.testfx:testfx-junit5:4.0.15-alpha"
}

jacoco {
    reportsDir = file("$buildDir/reports/coverage/")
}

jacocoTestReport {
    reports {
        html.enabled true
        html.destination file("$jacoco.reportsDir/html/")
        xml.enabled true
        xml.destination file("$jacoco.reportsDir/jacocoTestReport.xml")
    }
}

repositories {
    jcenter()
}

run {
    doFirst {
        jvmArgs = [
                "--module-path", classpath.asPath,
                "--add-modules", "javafx.controls"
        ]
    }
}

test {
    jvmArgs = [
            "-javaagent:${classpath.find {it.name.contains("jmockit")}.absolutePath}",
            "-Dtestfx.headless=true"
    ]
    useJUnitPlatform()
}
